name: Reusable Build Workflow

on:
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_call
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call:
    inputs:
      tests-path:
        description: Tests path
        required: true
        type: string
      coverage-exclude:
        description: Coverage exclude filter
        default: "[BuildingBlocks.*]*%2c[ECommerce.Services.Shared]*"
        type: string
      unit-test-filter:
        description: Unit tests filter
        default: "(Category=Unit&FullyQualifiedName~UnitTests&FullyQualifiedName~ECommerce.Services)"
        type: string
      integration-test-filter:
        description: Integration tests filter
        default: "(Category=Integration&FullyQualifiedName~IntegrationTests&FullyQualifiedName~ECommerce.Services)|(Category=EndToEnd&FullyQualifiedName~EndToEndTests)"
        type: string
      project-path:
        description: Project path
        required: true
        type: string
      service-name:
        description: Service name
        required: true
        type: string
      docker-file-path:
        description: Docker file path
        required: true
        type: string

jobs:
  build-test:
    # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-latest

    #https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
    continue-on-error: false

    # The GITHUB_TOKEN permissions passed from the caller workflow can be only downgraded in called workflow
    permissions:
      contents: read
      checks: write # for test-reporter

    steps:

      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      # The `default working directory` on the runner for `steps`, and the default location of your repository when using the checkout action
      # it is `defualt root path` if we don't specify a working directory
      - name: Ls default workspace for steps
        run: ls -R ${{ github.workspace }}

        # https://docs.github.com/en/actions/learn-github-actions/variables#using-contexts-to-access-variable-values
      - name: Job Info
        run: |
          echo "job name is: ${{ github.job }}"
          echo "actor is: ${{ github.actor }}"
          echo workspace is: ${{ github.workspace }}
          echo "is workflow_dispatch event? ${{ github.event_name == 'workflow_dispatch' }}"
          echo "is push event? ${{ github.event_name == 'push' }}"
          echo "is pull request event? ${{ github.event_name == 'pull_request' }}"
          echo "pull_request.head.ref is: ${{ github.event.pull_request.head.ref }}"
          echo "github.ref_name is: ${{ github.ref_name }}"
          echo "github.ref is: ${{ github.ref }}"
          echo "github.head_ref is: ${{ github.head_ref }}"
          echo "project-path is: ${{ inputs.project-path }}"
          echo "tests-path is: ${{ inputs.tests-path }}"

      - name: Call Composite Action checkout
        uses: ./.github/actions/checkout
        id: checkout-step

      - name: Call Composite Action formatting
        if: success()
        uses: ./.github/actions/formatting
        with:
          formatting-tool: csharpier

      - name: Call Composite Action build-test
        uses: ./.github/actions/build-test
        if: success()
        id: build-test-step
        with:
          project-path: ${{ inputs.project-path }}
          tests-path: ${{ inputs.tests-path }}
          unit-test-filter: ${{ inputs.unit-test-filter }}
          integration-test-filter: ${{ inputs.integration-test-filter }}
          coverage-exclude: ${{ inputs.coverage-exclude }}
          # wildcard search for files with the ".cobertura.xml" extension in all subdirectories of the current directory
          # https://www.jamescroft.co.uk/combining-multiple-code-coverage-results-in-azure-devops/
          # https://stackoverflow.com/questions/53255065/dotnet-unit-test-with-coverlet-how-to-get-coverage-for-entire-solution-and-not
          reports-path: ${{ github.workspace }}/**/*.cobertura.xml
          reports-output-path: ${{ github.workspace }}/output/test-results
          service-name: ${{ inputs.service-name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Call Composite Action docker-build
        uses: ./.github/actions/docker-build
        if: success()
        id: docker-build-step
        with:
          docker-file-path: ${{ inputs.docker-file-path }}
          service-name: ${{ inputs.service-name }}
