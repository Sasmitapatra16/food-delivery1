name: Reusable Deployment Workflow

on:
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_call
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputsinput_idtype
  # https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_call:
    inputs:
      environment-name:
        type: string
        description: Environment to deploy to
        required: true
      release-version:
        type: string
        description: Version
        required: true
      registry-endpoint:
        type: string
        description: Registry endpoint
        default: ${{ github.repository }}
      registry:
        type: string
        description: Registry endpoint
        required: true
      service-name:
        type: string
        description: Service name
        required: true
jobs:

  deploy:
    name: Deploy to ${{ inputs.environment-name }} Environment
    runs-on: ubuntu-latest
    #https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
    continue-on-error: false

    env:
      IMAGE_NAME: ${{ inputs.registry }}/${{ inputs.registry-endpoint }}/${{ inputs.service-name }}:${{ inputs.release-version }}

      # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    environment:
      name: ${{ inputs.environment-name }}
      # url: ${{ steps.deploy-to-heroku.outputs.webapp-url }}

    steps:

    # https://docs.github.com/en/actions/learn-github-actions/variables#using-contexts-to-access-variable-values
    - name: Job Info
      run: |
        echo "job name is: ${{ github.job }}"
        echo "branch name is: ${{ github.ref_name }}"
        echo "environment-name is: ${{ inputs.environment-name }}"
        echo "version is: ${{ inputs.release-version }}"
        echo "service-name is: ${{ inputs.service-name }}"
        echo "registry is: ${{ inputs.registry }}"
        echo "registry-endpoint is: ${{ inputs.registry-endpoint }}"
        echo "release image is: ${{ env.IMAGE_NAME }}"

    - name: Check Inputs
      run: |
        if [ -z ${{ inputs.release-version }} ]
           then echo "version is empty, action cancelled..."
                exit 1
        fi
        if [ -z ${{ inputs.environment-name }} ]
           then echo "environment-name is empty, action cancelled..."
                exit 1
        fi

    - name: Call Composite Action checkout
      uses: ./.github/actions/checkout-code
      id: checkout-step

#    - name: Call Composite Action deploy-azure-image
#        uses: ./.github/actions/deploy-azure-image
#        id: deploy-azure-image-step
#        with:
#          resource-group:
#          service-name: ${{ inputs.service-name }}
#          image: ${{ env.IMAGE_NAME }}"
#          azure-creds:
#          env-secret:

    - name: Call Composite Action deploy-azure
      uses: ./.github/actions/deploy-azure
      id: deploy-azure-step
      with:
        service-name: ${{ inputs.service-name }}
        azure-creds: "1"
        token: ${{ secrets.GITHUB_TOKEN }}

#    - name: Deploy Helms to AKS
#      run: echo "AKS"
