# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
# https://doug.sh/posts/using-composite-actions-with-github-actions/
# https://wallis.dev/blog/composite-github-actions

name: "Generate Tests Report"
description: "Generating tests reports for our application "

# Input parameters allow you to specify data that the action expects to use during runtime. GitHub stores input parameters as environment variables.(so they are just string)
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  reports-path:
    description: "Reports path"
    required: true
  reports-output-path:
    description: "Reports output-path"
    required: true
  service-name:
    description: "Service name"
    required: true
  # https://stackoverflow.com/questions/70098241/using-secrets-in-composite-actions-github
  token:
    description: 'A Github PAT'
    required: true

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-actions
runs:
  using: "composite"
  steps:

    # https://github.com/danielpalme/ReportGenerator
    # https://github.com/danielpalme/ReportGenerator-GitHub-Action
    # https://www.jamescroft.co.uk/combining-multiple-code-coverage-results-in-azure-devops/
    # https://dotnetthoughts.net/generating-code-coverage-reports-in-dotnet-core/
    # https://docs.github.com/en/actions/learn-github-actions/expressions
    # https://stackoverflow.com/questions/57850553/github-actions-check-steps-status
    # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#steps-context
    - name: Generate Report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.15
      id: generate-report
      with:
        reports: ${{ inputs.reports-path }}
        targetdir: ${{ inputs.reports-output-path }}
        reporttypes: "Cobertura;lcov;MarkdownSummaryGithub;Html;"

      # https://unix.stackexchange.com/questions/57013/zip-all-files-in-directory
      # https://limeii.github.io/2022/11/deploy-to-azure-appservice-with-github-actions/
      # https://stackoverflow.com/questions/68470162/how-to-archive-files-in-artifact-for-github-workflow-actions-in-order-to-fix-thi
      # note: we should zip inner (test-results) folder and for doing this we use  cd output first then zip
      # test-results/* folder, otherwise with zip output/test-result it zip output folder and inner test-results folder together
    - name: Zip test-results Artifacts
      if: success()
      shell: bash
      id: test-results-zip
      run: |
        cd output
        zip -r test-results.zip test-results/*

      # https://github.com/actions/runner/issues/946#issuecomment-900193569
      # https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
    - name: Ls Output Files
      shell: bash
      if: success()
      run: ls -R
      working-directory: ${{ github.workspace }}/output

      # https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
      # https://github.blog/changelog/2020-10-08-github-actions-ability-to-change-retention-days-for-artifacts-and-logs/
      # https://github.com/actions/upload-artifact#upload-an-entire-directory
    - name: Upload Test And Coverage Results Artifacts
      uses: actions/upload-artifact@v3
      if: steps.test-results-zip.outcome == 'success'
      with:
        name: ${{ inputs.service-name}}_test_artifacts
        retention-days: 5
        path: |
          output/test-results.zip

      # https://josh-ops.com/posts/github-code-coverage/
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: success()
      with:
        filename: output/test-results/Cobertura.xml
        badge: true
        hide_complexity: true
        indicators: true
        format: 'markdown'
        output: 'both'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ success() && github.event_name == 'pull_request' }}
      with:
        recreate: true
        # get generated summary from `CodeCoverageSummary` step
        path: code-coverage-results.md

    - name: Write to Job Summary
      shell: bash
      if: success()
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    # merging all coverage in a single coverage file and generating html files for downloading as artifacts
    - name: Publish coverage report to coveralls.io
      if: success()
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ inputs.token }}
        path-to-lcov: "output/test-results/lcov.info"

    # GitHub Api call permissions problem here
    # https://github.com/dorny/test-reporter
    # https://github.com/dorny/test-reporter/pull/174
    # https://github.com/dorny/test-reporter/issues/168
    - name: Test Results
      uses: dorny/test-reporter@v1
      id: test-report
      if: always()
      with:
        name: ${{ inputs.service-name }} Test Reports
        reporter: dotnet-trx
        token: ${{ inputs.token }}
        path: "**/test-results.trx"
        ## https://github.com/dorny/test-reporter#recommended-setup-for-public-repositories
        ## https://github.com/dorny/test-reporter/blob/0d9714ddc7ff86918ec725a527a3a069419d301a/src/utils/github-utils.ts#L44
        ## artifact name to download trx test result if it is in seperated workflow with github rest call, if it is not in another workflow skip this
        # artifact: "'
