# https://docs.docker.com/compose/reference/#use--f-to-specify-name-and-path-of-one-or-more-compose-files
# https://docs.docker.com/compose/extends/
# Overrid 'docker-compose.yaml' configs here for development, actually we can name this file also to docker-compose.dev.yaml but because `override` suffix infere implicitly by docker-compose we use this name

# To build and debug the app on dev machine --> docker-compose -f docker-compose.yaml build
# To start and debug the app on dev machine --> docker-compose -f docker-compose.yaml up -d

version: "3.8"
services:
  gateway:
    # https://nickjanetakis.com/blog/docker-tip-57-using-build-and-image-in-the-same-docker-compose-servicemage
    image: gateway:dev
    build:
      context: ../../
      dockerfile: src/ApiGateway/dev.Dockerfile
    container_name: gateway-dev

  catalogs:
    # https://nickjanetakis.com/blog/docker-tip-57-using-build-and-image-in-the-same-docker-compose-service
    image: catalogs:dev
    build:
      # the .dockerignore needs to be in the root of your build context. The build context is the directory you pass at the end of the build command, often a . or the current directory
      # we can use a .dockerignore file to exclude some files or directories from build context
      # https://docs.docker.com/build/building/context/
      # https://docs.docker.com/engine/reference/commandline/build/
      # https://www.howtogeek.com/devops/understanding-the-docker-build-context-why-you-should-use-dockerignore/
      context: ../../
      dockerfile: src/Services/Catalogs/dev.Dockerfile
    container_name: catalogs-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoOptions__ConnectionString=mongodb://mongo:${MONGO_PORT}
      - DatabaseName=ECommerce-services-catalogs
      - PostgresOptions__ConnectionString=Server=postgres;Port=5432;Database=ECommerce.Services.Catalogs;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Include Error Detail=true
      - PostgresOptions__UseInMemory=false
      - RabbitConfiguration__Hostname=rabbitmq
      - RabbitConfiguration__UserName=guest
      - RabbitConfiguration__Password=guest
      - RabbitConfiguration__Port=5672
      - OutboxOptions__ConnectionString=Server=postgres;Port=5432;Database=ECommerce.Services.Catalogs;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Include Error Detail=true
      - HangfireMessageSchedulerOptions__ConnectionString=Server=postgres;Port=5432;Database=ECommerce.Services.Catalogs;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Include Error Detail=true
      - InternalMessageSchedulerOptions__ConnectionString=Server=postgres;Port=5432;Database=ECommerce.Services.Catalogs;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Include Error Detail=true

  identity:
    # https://nickjanetakis.com/blog/docker-tip-57-using-build-and-image-in-the-same-docker-compose-service
    image: identity:dev
    build:
      # the .dockerignore needs to be in the root of your build context. The build context is the directory you pass at the end of the build command, often a . or the current directory
      # we can use a .dockerignore file to exclude some files or directories from build context
      # https://docs.docker.com/build/building/context/
      # https://docs.docker.com/engine/reference/commandline/build/
      # https://www.howtogeek.com/devops/understanding-the-docker-build-context-why-you-should-use-dockerignore/
      context: ../../
      dockerfile: src/Services/Identity/dev.Dockerfile
    container_name: identity-dev

  customers:
    # https://nickjanetakis.com/blog/docker-tip-57-using-build-and-image-in-the-same-docker-compose-service
    image: customers:dev
    build:
      # the .dockerignore needs to be in the root of your build context. The build context is the directory you pass at the end of the build command, often a . or the current directory
      # we can use a .dockerignore file to exclude some files or directories from build context
      # https://docs.docker.com/build/building/context/
      # https://docs.docker.com/engine/reference/commandline/build/
      # https://www.howtogeek.com/devops/understanding-the-docker-build-context-why-you-should-use-dockerignore/
      context: ../../
      dockerfile: src/Services/Customers/dev.Dockerfile
    container_name: customers-dev

  rabbitmq:
    ports:
      - 15672:15672
      - 5672:5672

  postgres:
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"

  mongo:
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
